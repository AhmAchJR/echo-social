<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= profile.handle %>'s Profile
    </title>
    <style>
        /* General Body Styling */
        /* Global Styles */
        /* General Body Styling */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #6a11cb, #2575fc) !important;
            color: #fff;
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100vh;
        }

        /* Navbar Styling */
        .navbar {
            width: 100%;
            background-color: #444;
            padding: 10px;
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            justify-content: flex-end;
            z-index: 1000;
        }

        /* Dropdown Styling */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            /* Initially hidden */
            position: absolute;
            background-color: darkmagenta;
            min-width: 200px;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            right: 0;
            border-radius: 5px;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }

        /* Show dropdown content on hover */
        .dropdown:hover .dropdown-content {
            display: block !important;
            opacity: 1;
            visibility: visible;
        }

        /* Dropdown Links */
        .dropdown-content a {
            color: #444;
            background-color: whitesmoke;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            border-bottom: 1px solid #ddd;
        }

        .dropdown-content a:last-child {
            border-bottom: none;
            /* Remove last border */
        }

        .dropdown-content a:hover {
            background-color: #fff;
            color: #000;
            /* Better visibility on hover */
        }

        /* Friend Request Button */
        .dropbtn {
            padding: 10px 20px;
            background-color: #2196f3;
            color: #ffffff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

        .dropbtn:hover {
            background-color: #1976d2;
        }

        /* Profile Container */
        .profile-container {
            background: rgba(255, 255, 255, 0.2) !important;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            text-align: center;
            width: 400px;
            margin-top: 175px;
        }

        /* Profile Picture */
        .profile-picture {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            margin-bottom: 15px;
            border: 3px solid #fff;
        }

        /* Username */
        .username {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        /* User Info */
        .user-info {
            font-size: 16px;
            margin-bottom: 20px;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .action-buttons button {
            padding: 10px 15px;
            font-size: 14px;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .add-friend {
            background: #4caf50;
        }

        .add-friend:hover {
            background: #45a049;
        }

        .chat {
            background: #2196f3;
        }

        .chat:hover {
            background: #1976d2;
        }

        .cancel-request {
            background: #f44336;
        }

        .cancel-request:hover {
            background: #d32f2f;
        }

        .accept-request {
            background: #ff9800;
        }

        .accept-request:hover {
            background: #fb8c00;
        }

        .reject-request {
            background: #9e9e9e;
        }

        .reject-request:hover {
            background: #757575;
        }

        /* Owner Profile Info */
        .owner-info {
            background-color: #ffffff90 !important;
            padding: 10px;
            border-radius: 5px;
        }

        /* Responsive Adjustments */
        @media (max-width: 600px) {
            .profile-container {
                width: 90%;
            }

            .dropdown-content {
                left: 0;
                right: auto;
            }
        }
    </style>
</head>

<body>
    <!-- Navbar with dropdown -->
    <div class="navbar">
        <div class="dropdown">
            <button class="dropbtn">Friend Requests</button>
            <div class="dropdown-content">
                <!-- Example of a request item; dynamically generate using server-side rendering -->
                <% if (isOwner && userRequests) { %>
                    <h3>User Requests:</h3>
                    <!-- <pre><%= JSON.stringify(userRequests) %></pre> Debug: What gets printed here -->
                    <% userRequests.forEach(function(request) { %>
                        <a href="/profile/<%= request.userid %>">Request from <%= request.handle %> - <%= request.status
                                    %></a>
                        <% }); %>
                            <% } else { %>
                                <a href="#">No New Requests</a>
                                <% } %>

            </div>
        </div>
    </div>

    <div class="profile-container">
        <!-- Display the user's profile picture -->
        <img src="<%= profile.pic %>" alt="Profile Picture" class="profile-picture">

        <!-- Display the user's username -->
        <div class="username">
            <%= profile.handle %>
        </div>

        <!-- Display additional user information -->
        <div class="user-info">
            <p>Email: <%= profile.email %>
            </p>
        </div>

        <% if (isOwner) { %>
            <!-- Owner view: Only display profile info without buttons -->
            <div class="owner-info">
                <p><strong>Profile Owner</strong></p>
            </div>
            <% } else { %>
                <!-- Non-owner view: Display action buttons -->
                <div class="action-buttons">
                    <% if (!isFriend) { %>
                        <!-- Button to send a friend request -->
                        <button class="add-friend">Add Friend</button>
                        <% } %>

                            <% if (requestSent) { %>
                                <!-- Button to cancel a sent friend request -->
                                <button class="cancel-request">Cancel Request</button>
                                <% } %>

                                    <% if (hasIncomingRequest) { %>
                                        <!-- Buttons to accept or reject a friend request -->
                                        <button class="accept-request">Accept</button>
                                        <button class="reject-request">Reject</button>
                                        <% } %>

                                            <% if (isFriend) { %>
                                                <!-- Button to chat with the user -->
                                                <button class="chat">Chat</button>
                                                <% } %>
                </div>
                <% } %>
    </div>

    <script></script>
    <script>
        // Store the token in localStorage for use in future requests
        const token = "<%= token %>";
        localStorage.setItem('authToken', token);

        document.addEventListener("DOMContentLoaded", () => {
            const addFriendButton = document.querySelector(".add-friend");
            const cancelRequestButton = document.querySelector(".cancel-request");
            const chatButton = document.querySelector(".chat");

            // Get the token from localStorage
            const token = localStorage.getItem('authToken');

            // Send a friend request
            if (addFriendButton) {
                addFriendButton.addEventListener('click', () => {
                    fetch('/friend/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-auth-token': token // Include token in the header
                        },
                        body: JSON.stringify({
                            userId: '<%= profile.userid %>', // You can pass the profile's ID here
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Request sent:', data);
                        })
                        .catch(error => {
                            console.error('Error sending request:', error);
                        });
                });
            }

            // Cancel a friend request
            if (cancelRequestButton) {
                cancelRequestButton.addEventListener('click', () => {
                    fetch('/friend/cancel', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-auth-token': token // Include token in the header
                        },
                        body: JSON.stringify({
                            userId: '<%= profile.userid %>',
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Request canceled:', data);
                        })
                        .catch(error => {
                            console.error('Error canceling request:', error);
                        });
                });
            }

            // Chat with the user
            if (chatButton) {
                chatButton.addEventListener('click', () => {
                    fetch('/start-chat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'x-auth-token': token // Include token in the header
                        },
                        body: JSON.stringify({
                            userId: '<%= profile.userid %>',
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Chat started:', data);
                        })
                        .catch(error => {
                            console.error('Error starting chat:', error);
                        });
                });
            }
        });
    </script>
</body>

</html>